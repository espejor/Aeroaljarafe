<div class="jumbotron mt-4">
    <h1 class="display-4">Aeroaljarafe. Central de reservas</h1>
    <p class="lead">Bienvenido a la central de reservas de Aeroaljarafe</p>
    <hr class="my-4">
    <p>En este sitio puedes realizar una reserva para un vuelo, con monitor o sin él, eligiendo
        el avión que esté disponible y para el que estés habilitado. Asímismo puedes anular la
        reserva y hacer el cierre del vuelo con los atps del mismo e incluso proceder al pago
        vía tarjeta de crédito o paypal</p>
    <div class="footer d-flex justify-content-end flex-column bd-highlight " >
        <a href="/api/login" class="btn btn-primary btn-lg p-2 bd-highlight">Login</a>
        <div class="entrada d-flex justify-content-end">
            <a href="/api/logup" class="p-2 bd-highlight">No tengo cuenta</a>
            <form id="enter"  enctype="multipart/form-data" name="enter">
                <input type="button" value="Entrar" ng-click="getRandomUser()" > 
            </form>
        </div>
    </div>
</div>

{{!-- Prueba con Angular --}}

<script>
  var app = angular.module('app', [] , function config($httpProvider){
    // Los interceptores modifican las peticiones http
    // en este caso se añade el token a la cabezera.
    $httpProvider.interceptors.push("AuthInterceptor");
  });

  app.controller('MainCtrl', function($scope, RandomUserFactory, UserFactory) {

    //initialization
    UserFactory.getUser().then(function(res) {
        $scope.userLoged = res.data;
    });

    $scope.getRandomUser = function() {
        RandomUserFactory.getUser()
        .then(function(res) {
            $scope.document = res.data
//return res
        })
        .catch(handleError);
    }

    $scope.login = function() {
        UserFactory.login($scope.username, $scope.password).then(function(res) {
                $scope.userLoged = res.data.user;
                $scope.username = "";
                $scope.password = "";
            })
            .catch(handleError);
    }

    $scope.logout = function() {
        UserFactory.logout();
        $scope.userLoged = null;
    }

    function handleError(err) {
        console.log("Error :", err.data);
    }
});


app.factory("UserFactory",function ($http, AuthTokenFactory, $q) {
  return{
    login: login,
    logout: logout,
    getUser: getUser
  };
  function login(username, password) {
    return $http.post("/login",{
      username: username,
      password: password
    }).then(function (res) {
      AuthTokenFactory.setToken(res.data.token);
      return res;
    });
  }
  function logout() {
    AuthTokenFactory.setToken();
  }

  function getUser() {
    if(AuthTokenFactory.getToken()){
      return $http.get("/me");
    }else{
      return $q.reject({data : " client has no auth token"});
    }

  }
});

app.factory("AuthTokenFactory",function ($window) {
  var store = $window.localStorage;
  var key = "token";

  return{
    getToken: getToken,
    setToken: setToken
  };

  function getToken() {
    return store.getItem(key);
  }

  function setToken(token) {
    if(token){
      store.setItem(key, token);
    }else{
      store.removeItem(key);
    }
  }

});

app.factory("RandomUserFactory", function($http) {
    return {
        getUser: getUser
    };

    function getUser() {
        return $http.get("/api/brands");
    }
});

app.factory('AuthInterceptor',function (AuthTokenFactory) {
  return{
    request: addToken
  };

  function addToken(config) {
    var token = AuthTokenFactory.getToken();
    if (token){
      config.headers = config.headers || {};
      config.headers.Authorization = 'bearer ' + token;
    }
    return config;
  }

});


</script>



























{{!-- <script type="text/javascript">
    const formEnter = document.querySelector('#enter')
    formEnter.addEventListener('submit',function(event){
        let token =""
        if ((localStorage.getItem('token')) != "")
            token = "Bearer " + localStorage.getItem('token')
        return fetch('/api/planes',{
            headers: {
                'Content-Type': "text/html",
                'Authorization': token
            }
        })
        .then(function(response) {
           return response.text()
        }).then(resBody => {
                document.write(resBody)
        })
    })
    
</script> --}}